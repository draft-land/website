<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/"><channel><title>ZX-calculus publications</title><link>http://zxcalculus.com/publications.rss</link><description>An up to date list of the newest publications related to the ZX-calculus</description><language>en-US</language><lastBuildDate>Tue, 20 Apr 2021 16:16:58 GMT</lastBuildDate><generator>rfeed v1.0.0</generator><docs>https://github.com/svpino/rfeed/blob/master/README.md</docs><item><title>Qufinite ZX-calculus: a unified framework of qudit ZX-calculi</title><link>http://arxiv.org/abs/2104.06429</link><description>ZX-calculus is graphical language for quantum computing which usually focuses on qubits. In this paper, we generalise qubit ZX-calculus to qudit ZX-calculus in any finite dimension by introducing suitable generators, especially a carefully chosen triangle node. As a consequence we obtain a set of rewriting rules which can be seen as a direct generalisation of qubit rules, and a normal form for any qudit vectors. Based on the qudit ZX-calculi, we propose a graphical formalism called qufinite ZX-calculus as a unified framework for all qudit ZX-calculi, which is universal for finite quantum theory due to a normal form for matrix of any finite size. We would expect a reconstruction of finite quantum theory within the framework of qufinite ZX-calculus which focuses on compositionality without resorting to any probability theory or sum structures.</description><author>Quanlong Wang</author><pubDate>Tue, 13 Apr 2021 00:00:00 GMT</pubDate><guid isPermaLink="true">http://arxiv.org/abs/2104.06429</guid></item><item><title>Quantum Algorithms and Oracles with the Scalable ZX-calculus</title><link>http://arxiv.org/abs/2104.01043</link><description>The ZX-calculus was introduced as a graphical language able to represent specific quantum primitives in an intuitive way. The recent completeness results have shown the theoretical possibility of a purely graphical description of quantum processes. However, in practice, such approaches are limited by the intrinsic low level nature of ZX calculus. The scalable notations have been proposed as an attempt to recover an higher level point of view while maintaining the topological rewriting rules of a graphical language. We demonstrate that the scalable ZX-calculus provides a formal, intuitive, and compact framework to describe and prove quantum algorithms. As a proof of concept, we consider the standard oracle-based quantum algorithms: Deutsch-Jozsa, Bernstein-Vazirani, Simon, and Grover algorithms, and we show they can be described and proved graphically.</description><author>Titouan Carette, Yohann D'Anello and Simon Perdrix</author><pubDate>Fri, 02 Apr 2021 00:00:00 GMT</pubDate><guid isPermaLink="true">http://arxiv.org/abs/2104.01043</guid></item><item><title>ZX-Calculus and Extended Wolfram Model Systems II: Fast Diagrammatic Reasoning with an Application to Quantum Circuit Simplification</title><link>http://arxiv.org/abs/2103.15820</link><description>This article presents a novel algorithmic methodology for performing automated diagrammatic deductions over combinatorial structures, using a combination of modified equational theorem-proving techniques and the extended Wolfram model hypergraph rewriting formalism developed by the authors in previous work. We focus especially upon the application of this new algorithm to the problem of automated circuit simplification in quantum information theory, using Wolfram model multiway operator systems combined with the ZX-calculus formalism for enacting fast diagrammatic reasoning over linear transformations between qubits. We show how to construct a generalization of the deductive inference rules for Knuth-Bendix completion in which equation matches are selected on the basis of causal edge density in the associated multiway system, before proceeding to demonstrate how to embed the higher-order logic of the ZX-calculus rules within this first-order equational framework. After showing explicitly how the (hyper)graph rewritings of both Wolfram model systems and the ZX-calculus can be effectively realized within this formalism, we proceed to exhibit comparisons of time complexity vs. proof complexity for this new algorithmic approach when simplifying randomly-generated Clifford circuits down to pseudo-normal form, as well as when reducing the number of T-gates in randomly-generated non-Clifford circuits, with circuit sizes ranging up to 3000 gates, illustrating that the method performs favorably in comparison with existing circuit simplification frameworks, and also exhibiting the approximately quadratic speedup obtained by employing the causal edge density optimization. Finally, we present a worked example of an automated proof of correctness for a simple quantum teleportation protocol, in order to demonstrate more clearly the internal operations of the theorem-proving procedure.</description><author>Jonathan Gorard, Manojna Namuduri and Xerxes D. Arsiwalla</author><pubDate>Mon, 29 Mar 2021 00:00:00 GMT</pubDate><guid isPermaLink="true">http://arxiv.org/abs/2103.15820</guid></item><item><title>Diagrammatic Differentiation for Quantum Machine Learning</title><link>http://arxiv.org/abs/2103.07960</link><description>We introduce diagrammatic differentiation for tensor calculus by generalising the dual number construction from rigs to monoidal categories. Applying this to ZX diagrams, we show how to calculate diagrammatically the gradient of a linear map with respect to a phase parameter. For diagrams of parametrised quantum circuits, we get the well-known parameter-shift rule at the basis of many variational quantum algorithms. We then extend our method to the automatic differentation of hybrid classical-quantum circuits, using diagrams with bubbles to encode arbitrary non-linear operators. Moreover, diagrammatic differentiation comes with an open-source implementation in DisCoPy, the Python library for monoidal categories. Diagrammatic gradients of classical-quantum circuits can then be simplified using the PyZX library and executed on quantum hardware via the tket compiler. This opens the door to many practical applications harnessing both the structure of string diagrams and the computational power of quantum machine learning.</description><author>Alexis Toumi, Richie Yeung and Giovanni de Felice</author><pubDate>Sun, 14 Mar 2021 00:00:00 GMT</pubDate><guid isPermaLink="true">http://arxiv.org/abs/2103.07960</guid></item><item><title>Completeness of the ZH-calculus</title><link>http://arxiv.org/abs/2103.06610</link><description>There are various gate sets used for describing quantum computation. A particularly popular one consists of Clifford gates and arbitrary single-qubit phase gates. Computations in this gate set can be elegantly described by the ZX-calculus, a graphical language for a class of string diagrams describing linear maps between qubits. The ZX-calculus has proven useful in a variety of areas of quantum information, but is less suitable for reasoning about operations outside its natural gate set such as multi-linear Boolean operations like the Toffoli gate. In this paper we study the ZH-calculus, an alternative graphical language of string diagrams that does allow straightforward encoding of Toffoli gates and other more complicated Boolean logic circuits. We find a set of simple rewrite rules for this calculus and show it is complete with respect to matrices over $â„¤[\frac12]$, which correspond to the approximately universal Toffoli+Hadamard gateset. Furthermore, we construct an extended version of the ZH-calculus that is complete with respect to matrices over any ring $R$ where $1+1$ is not a zero-divisor.</description><author>Miriam Backens, Aleks Kissinger, Hector Miller-Bakewell, John van de Wetering and Sal Wolffs</author><pubDate>Thu, 11 Mar 2021 00:00:00 GMT</pubDate><guid isPermaLink="true">http://arxiv.org/abs/2103.06610</guid></item><item><title>Classifying Complexity with the ZX-Calculus: Jones Polynomials and Potts Partition Functions</title><link>http://arxiv.org/abs/2103.06914</link><description>The ZX-calculus is a graphical language which allows for reasoning about suitably represented tensor networks - namely ZX-diagrams - in terms of rewrite rules. Here, we focus on problems which amount to exactly computing a scalar encoded as a closed tensor network. In general, such problems are #P-hard. However, there are families of such problems which are known to be in P when the dimension is below a certain value. By expressing problem instances from these families as ZX-diagrams, we see that the easy instances belong to the stabilizer fragment of the ZX-calculus. Building on previous work on efficient simplification of qubit stabilizer diagrams, we present simplifying rewrites for the case of qutrits, which are of independent interest in the field of quantum circuit optimisation. Finally, we look at the specific examples of evaluating the Jones polynomial and of counting graph-colourings. Our exposition further champions the ZX-calculus as a suitable and unifying language for studying the complexity of a broad range of classical and quantum problems.</description><author>Alex Townsend-Teague and Konstantinos Meichanetzidis</author><pubDate>Thu, 11 Mar 2021 00:00:00 GMT</pubDate><guid isPermaLink="true">http://arxiv.org/abs/2103.06914</guid></item><item><title>Quantum and braided ZX calculus</title><link>http://arxiv.org/abs/2103.07264</link><description>We revisit the notion of interacting Frobenius Hopf algebras for ZX-calculus in quantum computing, with focus on allowing the algebras to be noncommutative and coalgebras to be noncocommutative. We introduce the notion of *-structures in ZX-calculus at this algebraic level and construct examples based on the quantum group u_q(sl_2) at a root of unity. We provide an abstract formulation of the Hadamard gate at this level and clarify its relationship to Hopf algebra self-duality. We then solve the problem of extending the notion of interacting Hopf algebras and ZX-calculus to take place in a braided tensor category. In the ribbon case, the Hadamard gate coming from braided self-duality obeys a modular identity. We give the example of b_q(sl_2), the self-dual braided version of u_q(sl_2).</description><author>Shahn Majid</author><pubDate>Thu, 11 Mar 2021 00:00:00 GMT</pubDate><guid isPermaLink="true">http://arxiv.org/abs/2103.07264</guid></item><item><title>[Video] String Diagrams for the Surface Code &amp;#127909;</title><link>https://www.youtube.com/watch?v=OYDpEo8yP40</link><description>We briefly review modular tensor categories, a formalism for modelling anyonic theories. By considering the modular tensor category for the toric code and a functor to FdHilb, we give the semantics of surface code string diagrams in terms of circuits and the ZX-calculus. We use these tools to compile circuits to the surface code.</description><author>Alex Cowtan</author><pubDate>Mon, 01 Mar 2021 00:00:00 GMT</pubDate><guid isPermaLink="true">https://www.youtube.com/watch?v=OYDpEo8yP40</guid></item><item><title>Kindergarden quantum mechanics graduates (...or how I learned to stop gluing LEGO together and love the ZX-calculus)</title><link>http://arxiv.org/abs/2102.10984</link><description>This paper is a `spiritual child' of the 2005 lecture notes Kindergarten Quantum Mechanics, which showed how a simple, pictorial extension of Dirac notation allowed several quantum features to be easily expressed and derived, using language even a kindergartner can understand. Central to that approach was the use of pictures and pictorial transformation rules to understand and derive features of quantum theory and computation. However, this approach left many wondering `where's the beef?' In other words, was this new approach capable of producing new results, or was it simply an aesthetically pleasing way to restate stuff we already know?   The aim of this sequel paper is to say `here's the beef!', and highlight some of the major results of the approach advocated in Kindergarten Quantum Mechanics, and how they are being applied to tackle practical problems on real quantum computers. We will focus mainly on what has become the Swiss army knife of the pictorial formalism: the ZX-calculus. First we look at some of the ideas behind the ZX-calculus, comparing and contrasting it with the usual quantum circuit formalism. We then survey results from the past 2 years falling into three categories: (1) completeness of the rules of the ZX-calculus, (2) state-of-the-art quantum circuit optimisation results in commercial and open-source quantum compilers relying on ZX, and (3) the use of ZX in translating real-world stuff like natural language into quantum circuits that can be run on today's (very limited) quantum hardware.   We also take the title literally, and outline an ongoing experiment aiming to show that ZX-calculus enables children to do cutting-edge quantum computing stuff. If anything, this would truly confirm that `kindergarten quantum mechanics' wasn't just a joke.</description><author>Bob Coecke, Dominic Horsman, Aleks Kissinger and Quanlong Wang</author><pubDate>Mon, 22 Feb 2021 00:00:00 GMT</pubDate><guid isPermaLink="true">http://arxiv.org/abs/2102.10984</guid></item><item><title>Distributive Laws, Spans and the ZX-Calculus</title><link>http://arxiv.org/abs/2102.04386</link><description>We modularly build increasingly larger fragments of the ZX-calculus by modularly adding new generators and relations, at each point, giving some concrete semantics in terms of some category of spans. This is performed using Lack's technique of composing props via distributive laws, as well as the technique of pushout cubes of Zanasi. We do this for the fragment of the ZX-calculus with only the black $Ï€$-phase (and no Hadamard gate) as well as well as the fragment which additionally has the and gate as a generator (which is equivalent to the natural number H-box fragment of the ZH calculus). In the former case, we show that this is equivalent to the full subcategory of spans of (possibly empty) free, finite dimensional affine $\mathbb F_2$-vector spaces, where the objects are the non-empty affine vector spaces. In the latter case, we show that this is equivalent to the full subcategory of spans of finite sets where the objects are powers of the two element set. Because these fragments of the ZX-calculus have semantics in terms of full subcategories of categories of spans, they can not be presented by distributive laws over groupoids. Instead, we first construct their subcategories of partial isomorphisms via distributive laws over all isomorphims with subobjects adoined. After which, the full subcategory of spans are obtained by freely adjoining units and counits the the semi-Frobenius structures given by the diagonal and codiagonal maps.</description><author>Cole Comfort</author><pubDate>Mon, 08 Feb 2021 00:00:00 GMT</pubDate><guid isPermaLink="true">http://arxiv.org/abs/2102.04386</guid></item></channel></rss>