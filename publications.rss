<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/"><channel><title>ZX-calculus publications</title><link>http://zxcalculus.com/publications.rss</link><description>An up to date list of the newest publications related to the ZX-calculus</description><language>en-US</language><lastBuildDate>Thu, 03 Dec 2020 11:25:15 GMT</lastBuildDate><generator>rfeed v1.0.0</generator><docs>https://github.com/svpino/rfeed/blob/master/README.md</docs><item><title>AKLT-states as ZX-diagrams: diagrammatic reasoning for quantum states</title><link>http://arxiv.org/abs/2012.01219</link><description>From Feynman diagrams to tensor networks, diagrammatic representations of computations in quantum mechanics have catalysed progress in physics. These diagrams represent the underlying mathematical operations and aid physical interpretation, but cannot generally be computed with directly. In this paper we introduce the ZXH-calculus, a graphical language based on the ZX-calculus, that we use to represent and reason about many-body states entirely graphically. As a demonstration, we express the 1D AKLT state, a symmetry protected topological state, in the ZXH-calculus by developing a representation of spins higher than 1/2 within the calculus. By exploiting the simplifying power of the ZXH-calculus rules we show how this representation straightforwardly recovers two important properties, the existence of topologically protected edge states, and the non-vanishing of a string order parameter. We furthermore show how the AKLT matrix-product state representation can be recovered from our diagrams. In addition, we provide an alternative proof that the 2D AKLT state on a hexagonal lattice can be reduced to a graph state, demonstrating that it is a universal quantum computing resource. Our results show that the ZXH-calculus is a powerful language for representing and computing with physical states entirely graphically, paving the way to develop more efficient many-body algorithms.</description><author>Richard D. P. East, John van de Wetering, Nicholas Chancellor and Adolfo G. Grushin</author><pubDate>Wed, 02 Dec 2020 00:00:00 GMT</pubDate><guid isPermaLink="true">http://arxiv.org/abs/2012.01219</guid></item><item><title>A Recipe for Quantum Graphical Languages</title><link>https://dx.doi.org/10.4230/LIPIcs.ICALP.2020.118</link><description>Different graphical calculi have been proposed to represent quantum computation. First the ZX- calculus [4], followed by the ZW-calculus [12] and then the ZH-calculus [1]. We can wonder if new Z*-calculi will continue to be proposed forever. This article answers negatively. All those language share a common core structure we call Z*-algebras. We classify Z*-algebras up to isomorphism in two dimensional Hilbert spaces and show that they are all variations of the aforementioned calculi. We do the same for linear relations and show that the calculus of [2] is essentially the unique one.</description><author>Titouan Carette and Emmanuel Jeandel</author><pubDate>Mon, 10 Aug 2020 00:00:00 GMT</pubDate><guid isPermaLink="true">http://arxiv.org/abs/2008.04193</guid></item><item><title>Algebraic complete axiomatisation of ZX-calculus with a normal form via elementary matrix operations</title><link>http://arxiv.org/abs/2007.13739</link><description>In this paper we give a complete axiomatisation of qubit ZX-calculus via elementary transformations which are basic operations in linear algebra. This formalism has two main advantages. First, all the operations of the phases are algebraic ones without trigonometry functions involved, thus paved the way for generalising complete axiomatisation of qubit ZX-calculus to qudit ZX-calculus and ZX-calculus over commutative semirings. Second, we characterise elementary transformations in terms of ZX diagrams, so a lot of linear algebra stuff can be done purely diagrammatically.</description><author>Quanlong Wang</author><pubDate>Sun, 26 Jul 2020 00:00:00 GMT</pubDate><guid isPermaLink="true">http://arxiv.org/abs/2007.13739</guid></item><item><title>A Generic Compilation Strategy for the Unitary Coupled Cluster Ansatz</title><link>http://arxiv.org/abs/2007.10515</link><description>We describe a compilation strategy for Variational Quantum Eigensolver (VQE) algorithms which use the Unitary Coupled Cluster (UCC) ansatz, designed to reduce circuit depth and gate count. This is achieved by partitioning Pauli exponential terms into mutually commuting sets. These sets are then diagonalised using Clifford circuits and synthesised using the phase polynomial formalism. This strategy reduces cx depth by 75.4% on average, and by up to 89.9%, compared to naive synthesis for a variety of molecules, qubit encodings and basis sets.</description><author>Alexander Cowtan, Will Simmons and Ross Duncan</author><pubDate>Mon, 20 Jul 2020 00:00:00 GMT</pubDate><guid isPermaLink="true">http://arxiv.org/abs/2007.10515</guid></item><item><title>Parts of Speech Tagging in NLP: Runtime Optimization with Quantum Formulation and ZX Calculus</title><link>http://arxiv.org/abs/2007.10328</link><description>This paper proposes an optimized formulation of the parts of speech tagging in Natural Language Processing with a quantum computing approach and further demonstrates the quantum gate-level runnable optimization with ZX-calculus, keeping the implementation target in the context of Noisy Intermediate Scale Quantum Systems (NISQ). Our quantum formulation exhibits quadratic speed up over the classical counterpart and further demonstrates the implementable optimization with the help of ZX calculus postulates.</description><author>Arit Kumar Bishwas, Ashish Mani and Vasile Palade</author><pubDate>Sun, 19 Jul 2020 00:00:00 GMT</pubDate><guid isPermaLink="true">http://arxiv.org/abs/2007.10328</guid></item><item><title>Colored props for large scale graphical reasoning</title><link>http://arxiv.org/abs/2007.03564</link><description>The prop formalism allows representation of processes withstring diagrams and has been successfully applied in various areas such as quantum computing, electric circuits and control flow graphs. However, these graphical approaches suffer from scalability problems when it comes to writing large diagrams. A proposal to tackle this issue has been investigated for ZX-calculus using colored props. This paper extends the approach to any prop, making it a general tool for graphical languages manipulation.</description><author>Titouan Carette and Simon Perdrix</author><pubDate>Tue, 07 Jul 2020 00:00:00 GMT</pubDate><guid isPermaLink="true">http://arxiv.org/abs/2007.03564</guid></item><item><title>Well-tempered ZX and ZH calculi</title><link>http://arxiv.org/abs/2006.02557</link><description>The ZX calculus is a mathematical tool to represent and analyse quantum operations by manipulating diagrams which in effect represent tensor networks. Two families of nodes of these networks are ones which commute with either Z rotations or X rotations, usually called "green nodes" and "red nodes" respectively. The original formulation of the ZX calculus was motivated in part by properties of the algebras formed by the green and red nodes: notably, that they form a bialgebra -- but only up to scalar factors. As a consequence, the diagram transformations and notation for certain unitary operations involve "scalar gadgets" which denote contributions to a normalising factor. We present renormalised generators for the ZX calculus, which form a bialgebra precisely. As a result, no scalar gadgets are required to represent the most common unitary transformations, and the corresponding diagram transformations are generally simpler. We also present a similar renormalised version of the ZH calculus. We obtain these results by an analysis of conditions under which various "idealised" rewrites are sound, leveraging the existing presentations of the ZX and ZH calculi.</description><author>Niel de Beaudrap</author><pubDate>Wed, 03 Jun 2020 00:00:00 GMT</pubDate><guid isPermaLink="true">http://arxiv.org/abs/2006.02557</guid></item><item><title>The ZX&amp; calculus: A complete graphical calculus for classical circuits using spiders</title><link>https://arxiv.org/abs/2004.05287</link><description>We give a complete presentation for the fragment, ZX&amp;, of the ZX-calculus generated by the Z and X spiders (corresponding to copying and addition) along with the not gate and the and gate. To prove completeness, we freely add units and counits to the category TOF generated by the Toffoli gate and ancillary bits, showing that this yields the strictification of spans of powers of the two element set; and then perform a two way translation between this category and ZX&amp;. A translation to some extension of TOF, as opposed to some fragment of the ZX-calculus, is a natural choice because of the multiplicative nature of the Toffoli gate. To this end, we show that freely adding counits to the semi-Frobenius algebra of a discrete inverse category is the same as computing the "environment structure" of the classical structures of the base discrete inverse category. We show that in this setting, the classical channels and the discrete Cartesian completion are the same constructions. Therefore, in the case of TOF, freely adding a counit, constructing the category of quantum channels, and computing the discrete Cartesian completion are all equivalent to partial functions between powers of the two element set. By glueing together the free counit completion and the free unit completion, this yields the strictification of spans between powers of the two element set. </description><author>Cole Comfort</author><pubDate>Wed, 29 Apr 2020 00:00:00 GMT</pubDate><guid isPermaLink="true">https://arxiv.org/abs/2004.05287</guid></item><item><title>Fast and effective techniques for T-count reduction via spider nest identities</title><link>https://arxiv.org/abs/2004.05164</link><description>In fault-tolerant quantum computing systems, realising (approximately) universal quantum computation is usually described in terms of realising Clifford+T operations, which is to say a circuit of CNOT, Hadamard, and π/2-phase rotations, together with T operations (π/4-phase rotations). For many error correcting codes, fault-tolerant realisations of Clifford operations are significantly less resource-intensive than those of T gates, which motivates finding ways to realise the same transformation involving T-count (the number of T gates involved) which is as low as possible. Investigations into this problem [arXiv:1206.0758, 1303.2042, 1308.4134, 1601.07363, 1606.01904, 1701.00140] has led to observations that this problem is closely related to NP-hard tensor decomposition problems [arXiv:1712.01557] and is tantamount to the difficult problem of decoding exponentially long Reed-Muller codes [arXiv:1601.07363]. This problem then presents itself as one for which must be content in practise with approximate optimisation, in which one develops an array of tactics to be deployed through some pragmatic strategy. In this vein, we describe techniques to reduce the T-count, based on the effective application of "spider nest identities": easily recognised products of parity-phase operations which are equivalent to the identity operation. We demonstrate the effectiveness of such techniques by obtaining improvements in the T-counts of a number of circuits, in run-times which are typically less than the time required to make a fresh cup of coffee. </description><author>Niel de Beaudrap, Xiaoning Bian and Quanlong Wang</author><pubDate>Fri, 10 Apr 2020 00:00:00 GMT</pubDate><guid isPermaLink="true">https://arxiv.org/abs/2004.05164</guid></item><item><title>Hypergraph simplification: Linking the path-sum approach to the ZH-calculus</title><link>https://arxiv.org/abs/2003.13564</link><description>The ZH-calculus is a complete graphical calculus for linear maps between qubits that admits, for example, a straightforward encoding of hypergraph states and circuits arising from the Toffoli+Hadamard gate set. In this paper, we establish a correspondence between the ZH-calculus and the path-sum formalism, a technique recently introduced by Amy to verify quantum circuits. In particular, we find a bijection between certain canonical forms of ZH-diagrams and path-sum expressions. We then introduce and prove several new simplification rules for the ZH-calculus, which are in direct correspondence to the simplification rules of the path-sum formalism. The relatively opaque path-sum rules are shown to arise naturally as the convergence of two consequences of the ZH-calculus. The first is the extension of the familiar graph-theoretic simplifications based on local complementation and pivoting to their hypergraph-theoretic analogues: hyper-local complementation and hyper-pivoting. The second is the graphical Fourier transform introduced by Kuijpers et al., which enables effective simplification of ZH-diagrams encoding multi-linear phase polynomials with arbitrary real coefficients.</description><author>Louis Lemonnier, John van de Wetering and Aleks Kissinger</author><pubDate>Mon, 30 Mar 2020 00:00:00 GMT</pubDate><guid isPermaLink="true">https://arxiv.org/abs/2003.13564</guid></item></channel></rss>