<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/"><channel><title>ZX-calculus publications</title><link>http://zxcalculus.com/publications.rss</link><description>An up to date list of the newest publications related to the ZX-calculus</description><language>en-US</language><lastBuildDate>Thu, 02 Apr 2020 18:12:12 GMT</lastBuildDate><generator>rfeed v1.0.0</generator><docs>https://github.com/svpino/rfeed/blob/master/README.md</docs><item><title>New ZX-calculus paper by Miriam Backens, Hector Miller-Bakewell, Giovanni de Felice, Leo Lobski and John van de Wetering: There and back again: A circuit extraction tale</title><link>https://arxiv.org/abs/2003.01664</link><description>We give the first circuit-extraction algorithm to work for
one-way computations containing measurements in all three planes and having
gflow. The algorithm is efficient and the resulting circuits do not contain
ancillae. One-way computations are represented using the ZX-calculus, hence the
algorithm also represents the most general known procedure for extracting
circuits from ZX-diagrams. In developing this algorithm, we generalise several
concepts and results previously known for computations containing only XY-plane
measurements. We bring together several known rewrite rules for measurement
patterns and formalise them in a unified notation using the ZX-calculus. These
rules are used to simplify measurement patterns by reducing the number of
qubits while preserving both the semantics and the existence of gflow. The
results can be applied to circuit optimisation by translating circuits to
patterns and back again.</description><pubDate>Sun, 01 Mar 2020 00:00:00 GMT</pubDate><guid isPermaLink="true">https://arxiv.org/abs/2003.01664</guid></item><item><title>New ZX-calculus paper by Renaud Vilmart: The Structure of Sum-Over-Paths, its Consequences, and Completeness for Clifford</title><link>https://arxiv.org/abs/2003.05678</link><description>We show that the formalism of "Sum-Over-Path" (SOP), used for symbolically representing linear maps or quantum operators, together with a proper rewrite system, has a structure of dagger-compact PROP. Several consequences arise from this observation: 1) Morphisms of SOP are very close to the diagrams of the graphical calculus called ZH-Calculus, so we give a system of interpretation between the two; 2) A construction, called the discard construction, can be applied to enrich the formalism so that, in particular, it can represent the quantum measurement. We also enrich the rewrite system so as to get the completeness of the Clifford fragments of both the initial formalism and its enriched version.</description><pubDate>Sun, 01 Mar 2020 00:00:00 GMT</pubDate><guid isPermaLink="true">https://arxiv.org/abs/2003.05678</guid></item><item><title>New ZX-calculus paper by Hector Miller-Bakewell: Entanglement and Quaternions: The graphical calculus ZQ</title><link>https://arxiv.org/abs/2003.09999</link><description>Graphical calculi are vital tools for representing and reasoning about quantum circuits and processes. Some are not only graphically intuitive but also logically complete. The best known of these is the ZX-calculus, which is an industry candidate for an Intermediate Representation; a language that sits between the algorithm designer's intent and the quantum hardware's gate instructions. The ZX calculus, built from generalised Z and X rotations, has difficulty reasoning about arbitrary rotations. This contrasts with the cross-hardware compiler TriQ which uses these arbitrary rotations to exploit hardware efficiencies. In this paper we introduce the graphical calculus ZQ, which uses quaternions to represent these arbitrary rotations, similar to TriQ, and the phase-free Z spider to represent entanglement, similar to ZX. We show that this calculus is sound and complete for qubit quantum computing, while also showing that a fully spider-based representation would have been impossible. This new calculus extends the zoo of qubit graphical calculi, each with different strengths, and we hope it will provide a common language for the optimisation procedures of both ZX and TriQ. </description><pubDate>Sun, 01 Mar 2020 00:00:00 GMT</pubDate><guid isPermaLink="true">https://arxiv.org/abs/2003.09999</guid></item><item><title>New ZX-calculus paper by Quanlong Wang: ZX-calculus over arbitrary commutative rings and semirings</title><link>https://arxiv.org/abs/1912.01003</link><description>In this extended abstract we give an axiomatisation of ZX-calculus over arbi-trary commutative rings and semirings respectively. By a normal form inspiredfrom matrix elementary operations such as row addition and row multiplication,we can obtain that these versions of ZX-calculus are still universal and complete.  </description><pubDate>Sun, 01 Dec 2019 00:00:00 GMT</pubDate><guid isPermaLink="true">https://arxiv.org/abs/1912.01003</guid></item><item><title>New ZX-calculus paper by Michael Hanks, Marta P. Estarellas, William J. Munro and Kae Nemoto: Efficient compression of quantum braided circuits</title><link>https://arxiv.org/abs/1912.11503</link><description>Mapping a quantum algorithm to any practical large-scale quantum computer will require a sequence of compilations and optimizations. At the level of fault-tolerant encoding, one likely requirement of this process is the translation into a topological circuit, for which braided circuits represent one candidate model. Given the large overhead associated with encoded circuits, it is paramount to reduce their size in terms of computation time and qubit number through circuit compression. While these optimizations have typically been performed in the language of 3-dimensional diagrams, such a representation does not allow an efficient, general and scalable approach to reduction or verification. We propose the use of the ZX-calculus as an intermediate language for braided circuit compression, demonstrating advantage by comparing results using this approach with those previously obtained for the compression of |A⟩ and |Y⟩ state distillation circuits. We then provide a rough benchmark of our method against a small set of Clifford+T circuits, yielding compression percentages of ∼77%. Our results suggest that the overheads of braided, defect-based circuits are comparable to those of their lattice-surgery counterparts, restoring the potential of this model for surface code quantum computation.   </description><pubDate>Sun, 01 Dec 2019 00:00:00 GMT</pubDate><guid isPermaLink="true">https://arxiv.org/abs/1912.11503</guid></item><item><title>New ZX-calculus paper by Quanlong Wang: An algebraic axiomatisation of ZX-calculus</title><link>https://arxiv.org/abs/1911.06752</link><description>In this paper we give an algebraic complete axiomatisation of ZX-calculus in the sense that there are only ring operations involved for phases, without any need of trigonometry functions such as sin and cos, in contrast to previous universally complete axiomatisations of ZX-calculus. With this algebraic axiomatisation of ZX-calculus, we are able to establish an invertible translation from ZH-calculus to ZX-calculus and to derive all the ZX-translated rules of ZH-calculus. As a consequence, we have a great benefit that all techniques obtained in ZH-calculus can be transplanted to ZX-calculus. </description><pubDate>Fri, 01 Nov 2019 00:00:00 GMT</pubDate><guid isPermaLink="true">https://arxiv.org/abs/1911.06752</guid></item><item><title>New ZX-calculus paper by Niel de Beaudrap, Xiaoning Bian and Quanlong Wang: Techniques to reduce π/4-parity phase circuits, motivated by the ZX calculus</title><link>https://arxiv.org/abs/1911.09039</link><description>To approximate arbitrary unitary transformations on one or more qubits, one must perform transformations which are outside of the Clifford group. The gate most commonly considered for this purpose is the T=diag(1,exp(iπ/4)) gate. As T gates are computationally expensive to perform fault-tolerantly in the most promising error-correction technologies, minimising the "T-count" (the number of T gates) required to realise a given unitary in a Clifford+T circuit is of great interest. We describe techniques to find circuits with reduced T-count in unitary circuits, which develop on the ideas of Heyfron and Campbell [arXiv:1712.01557] with the help of the ZX calculus. Following [arXiv:1712.01557], we reduce the problem to that of minimising the T count of a CNOT+T circuit. The ZX calculus motivates a further reduction to simplifying a product of commuting "π/4-parity-phase" operations: diagonal unitary transformations which induce a relative phase of exp(iπ/4) depending on the outcome of a parity computation on the standard basis (which motivated Kissinger and van de Wetering [1903.10477] to introduce "phase gadgets"). For a number of standard benchmark circuits, we show that these techniques --- in some cases supplemented by the TODD subroutine of Heyfron and Campbell [arXiv:1712.01557] --- yield T-counts comparable to or better than the best previously known results.  </description><pubDate>Fri, 01 Nov 2019 00:00:00 GMT</pubDate><guid isPermaLink="true">https://arxiv.org/abs/1911.09039</guid></item><item><title>New ZX-calculus paper by Anthony Munson, Bob Coecke and Quanlong Wang: A note on AND-gates in ZX-calculus: QBC-completeness and phase gadgets</title><link>https://arxiv.org/abs/1910.06818</link><description>In this note we exploit the utility of the triangle symbol in ZX-calculus, and its role within the ZX-representation of AND-gates in particular. First, we derive a decomposition theorem for large phase gadgets, something that is of key importance to recent developments in quantum circuit optimisation and T-count reduction in particular. Then, using the same rule set, we prove a completeness theorem for quantum Boolean circuits (QBCs), which adds to the plethora of complete reasoning systems under the umbrella of ZX-calculus. </description><pubDate>Tue, 01 Oct 2019 00:00:00 GMT</pubDate><guid isPermaLink="true">https://arxiv.org/abs/1910.06818</guid></item><item><title>New ZX-calculus paper by Alexander Cowtan, Silas Dilkes, Ross Duncan, Will Simmons and Seyon Sivarajah: Phase Gadget Synthesis for Shallow Circuits</title><link>https://arxiv.org/abs/1906.01734</link><description>We give an overview of the circuit optimisation methods used by tket, a compiler system for quantum software developed by Cambridge Quantum Computing Ltd. We focus on a novel technique based around phase gadgets, a family of multi-qubit quantum operations which occur naturally in a wide range of quantum circuits of practical interest. The phase gadgets have a simple presentation in the ZX-calculus, which makes it easy to reason about them. Taking advantage of this, we present an efficient method to translate the phase gadgets back to CNOT gates and single qubit operations suitable for execution on a quantum computer with significant reductions in gate count and circuit depth. We demonstrate the effectiveness of these methods on a quantum chemistry benchmarking set based on variational circuits for ground state estimation of small molecules.</description><pubDate>Sat, 01 Jun 2019 00:00:00 GMT</pubDate><guid isPermaLink="true">https://arxiv.org/abs/1906.01734</guid></item><item><title>New ZX-calculus paper by Titouan Carette, Dominic Horsman and Simon Perdrix: SZX-calculus: Scalable Graphical Quantum Reasoning</title><link>https://arxiv.org/abs/1905.00041</link><description>We introduce the Scalable ZX-calculus (SZX-calculus for short), a formal and compact graphical language for the design and verification of quantum computations. The SZX-calculus is an extension of the ZX-calculus, a powerful framework that captures graphically the fundamental properties of quantum mechanics through its complete set of rewrite rules. The ZX-calculus is, however, a low level language, with each wire representing a single qubit. This limits its ability to handle large and elaborate quantum evolutions. We extend the ZX-calculus to registers of qubits and allow compact representation of sub-diagrams via binary matrices. We show soundness and completeness of the SZX-calculus and provide two examples of applications, for graph states and error correcting codes.</description><pubDate>Wed, 01 May 2019 00:00:00 GMT</pubDate><guid isPermaLink="true">https://arxiv.org/abs/1905.00041</guid></item></channel></rss>